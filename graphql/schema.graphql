scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    user(id: ID! @eq): User! @find
    me: User! @guard @auth
    shipment(id: ID! @eq): Shipment! @find
    shipments: [Shipment!] @all
}

type Mutation {
    createUser(
        name: String!
        email: String! @rules(apply: ["email", "unique:users,email"])
        password: String! @rules(apply: ["min:8", "max:64"])
    ): User! @create
    login(email: String!, password: String!): LoginInfo!

    createShipment(
        code: String @rules(apply: ["string"])
        openable: String!
        description: String! @rules(apply: ["string"])
        weight: Float!
    ): Shipment!

    updateShipment(
        id: ID!
        code: String @rules(apply: ["string"])
        openable: String
        description: String @rules(apply: ["string"])
        weight: Float
    ): Shipment! @update

    deleteShipment(id: ID! @whereKey): Shipment! @delete
}

type User {
    id: ID!
    name: String!
    email: String!
    email_verified_at: DateTime
    shipments: [Shipment!]! @hasMany
    created_at: DateTime!
    updated_at: DateTime!
}

enum OpenableStatus {
    NO @enum(value: 0)
    YES @enum(value: 1)
}

type Shipment {
    id: ID!
    code: String!
    openable: String!
    description: String!
    weight: Float!
    user: User! @belongsTo
    created_at: DateTime!
    updated_at: DateTime!
}

type LoginInfo {
    user: User!
    access_token: String!
    token_type: String!
    expires_in: String!
}
